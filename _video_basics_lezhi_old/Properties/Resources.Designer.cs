//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace testmediasmall.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("testmediasmall.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to varying vec3 wposition;
        ///varying vec3 wnormal;
        ///varying vec3 normal;
        ///varying vec3 vertex_to_light_vector;
        ///varying vec2 texture_coordinate;
        ///varying vec4 color;
        ///varying vec4 posL;
        /// 
        ///void main()
        ///{
        ///    // Defining The Material Colors
        ///    vec4 AmbientColor = vec4(0.0, 0.0, 0.0, 0.0);
        ///    vec3 DiffuseColor = color.xyz;//vec4(1.0, 0.0, 0.0, 1.0);
        ///   //DiffuseColor=wnormal;
        ///
        ///    // Scaling The Input Vector To Length 1
        ///    vec3 normalized_normal = normalize(normal);
        ///    vec3 normalized_vertex_to_light [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fragmentshader1 {
            get {
                return ResourceManager.GetString("fragmentshader1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to varying vec3 wposition;
        ///varying vec3 wnormal;
        ///varying vec3 normal;
        ///varying vec3 vertex_to_light_vector;
        ///varying vec2 texture_coordinate;
        ///varying vec4 color;
        ///varying vec4 posL;
        ///
        ///void main()
        ///{
        ///	posL=gl_ModelViewProjectionMatrix * gl_Vertex;
        ///	gl_Position = posL;
        ///
        ///	vec3 vp=(gl_ModelViewMatrix*gl_Vertex).xyz;
        ///
        ///	float dvp=length(vp.xy);
        ///	vp=normalize(vp);
        ///
        ///	wposition=gl_Vertex.xyz-vp.xyz*exp(-0.1*dvp*dvp)*5.0;
        ///	wnormal = gl_Normal;
        ///	normal = gl_NormalMatrix * gl_Normal;
        ///
        ///	gl_Position=gl_Mode [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string vertexshader1 {
            get {
                return ResourceManager.GetString("vertexshader1", resourceCulture);
            }
        }
    }
}
